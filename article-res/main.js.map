{"version":3,"sources":["./src/app/reservations-window/reservations-window.component.ts","./src/app/reservations-window/reservations-window.component.html","./src/environments/environment.ts","./src/app/logged-in-screen/logged-in-screen.component.ts","./src/app/logged-in-screen/logged-in-screen.component.html","./src/app/app-reservation-list/app-reservation-list.component.ts","./src/app/app-reservation-list/app-reservation-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/auth.service.ts","./src/app/services/reservation.service.ts","./src/app/attach-account/attach-account.component.ts","./src/app/attach-account/attach-account.component.html","./src/app/models/utils.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/add-reservation/add-reservation.component.ts","./src/app/add-reservation/add-reservation.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,2BAA2B;IAEtC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;sGALU,2BAA2B;2GAA3B,2BAA2B;QCPxC,yEACE;QAAA,yEACE;QAAA,wEAAsB;QAAA,mFAAwB;QAAA,4DAAK;QACnD,uEAAgB;QAAA,kIAAuE;QAAA,4DAAI;QAC7F,4DAAM;QACR,4DAAM;QAEN,yEACE;QAAA,iFAA2C;QAC3C,kFAA6C;QAC/C,4DAAM;;6FDHO,2BAA2B;cALvC,uDAAS;eAAC;gBACT,QAAQ,EAAE,yBAAyB;gBACnC,WAAW,EAAE,sCAAsC;gBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;;;;;;;;;;;;;AEND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,cAAc,EAAE;QACd,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,8BAA8B;QAC1C,WAAW,EAAE,qCAAqC;QAClD,SAAS,EAAE,cAAc;QACzB,aAAa,EAAE,0BAA0B;QACzC,iBAAiB,EAAE,aAAa;QAChC,KAAK,EAAE,0CAA0C;KAClD;CACF,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACxBnE;AAAA;AAAA;AAAkD;;AAO3C,MAAM,uBAAuB;IAElC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8FALU,uBAAuB;uGAAvB,uBAAuB;QCPpC,yEACE;QAAA,yEACE;QAAA,wEAAsB;QAAA,0EAAe;QAAA,4DAAK;QAC1C,uEAAgB;QAAA,qGAA0C;QAAA,4DAAI;QAChE,4DAAM;QACR,4DAAM;QAEN,yEACE;QAAA,4EAAgC;QAAA,4EAAiB;QAAA,4DAAS;QAC5D,4DAAM;;6FDFO,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,mCAAmC;gBAChD,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACQ;AAGtB;;;;;ICShC,uEACE;IAAA,uEAAgB;IAAA,uDAAS;IAAA,4DAAI;IAC/B,4DAAI;;;IADC,0DAAY;IAAZ,qIAAY;IAAC,0DAAS;IAAT,uEAAS;;;;IAZ7B,0EAME;IAAA,yEACE;IAAA,wEAAiB;IAAA,uDAAc;IAAA,4DAAK;IACpC,2EAA0B;IAAA,uDAA4E;;IAAA,4DAAQ;IAChH,4DAAM;IAEN,0HACE;IAGF,2EAA0B;IAAA,uDAA6B;IAAA,4DAAQ;IAEjE,4DAAO;;;;;IAhBL,sRAGE;IAGiB,0DAAc;IAAd,4EAAc;IACL,0DAA4E;IAA5E,8NAA4E;IAGxF,0DAA4B;IAA5B,gFAA4B;IAIlB,0DAA6B;IAA7B,oGAA6B;;ADNpD,MAAM,2BAA2B;IAEtC,YAAoB,aAAiC;QAAjC,kBAAa,GAAb,aAAa,CAAoB;IAAI,CAAC;IAQ1D,QAAQ;QACN,MAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;QACvE,IAAI,CAAC,oBAAoB,GAAG,gBAAgB,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,CAAC;QAEvG,IAAI,CAAC,iBAAiB,GAAG,qDAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;IAClF,CAAC;IAED,WAAW;QACT,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;QACrC,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;IAC1C,CAAC;IAED,aAAa,CAAC,CAAS;QACrB,MAAM,QAAQ,GAAa,EAAE,CAAC;QAC9B,MAAM,GAAG,GAAG,oDAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;QAE1D,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;YAC9B,OAAO;SACR;QAED,KAAK,IAAI,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,OAAO,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,CAAC;SACtD;QAED,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;IAChC,CAAC;IAGD,UAAU,CAAC,WAAmB;QAC5B,OAAO,WAAW,GAAG,EAAE,CAAC;IAC1B,CAAC;IAED,gBAAgB,CAAC,WAAmB;QAClC,OAAO,WAAW,GAAG,EAAE,CAAC;IAC1B,CAAC;IAED,aAAa,CAAC,iBAAyB;QACrC,MAAM,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,iBAAiB,CAAC;QAC/C,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;;sGAlDU,2BAA2B;2GAA3B,2BAA2B;QCXxC,yEAEE;QAAA,2HAME;QAYJ,4DAAM;;QAlBiD,0DAAyC;QAAzC,iFAAyC;;6FDSnF,2BAA2B;cALvC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,uCAAuC;gBACpD,SAAS,EAAE,CAAC,sCAAsC,CAAC;aACpD;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AAEA;;;;;AAQnC,MAAM,YAAY;IAGvB,YAAmB,IAAiB,EAAS,IAAgB;QAA1C,SAAI,GAAJ,IAAI,CAAa;QAAS,SAAI,GAAJ,IAAI,CAAY;QAF7D,UAAK,GAAG,qBAAqB,CAAC;QAG5B,sDAAQ,CAAC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACnF,CAAC;;wEALU,YAAY;4FAAZ,YAAY;QCNzB,yEACE;QAAA,uEAAiC;QAAA,iEAAM;QAAA,4DAAI;QAC3C,4EACE;QAAA,qEAAyC;QAC3C,4DAAS;QAET,yEACE;QAAA,wEACE;QAAA,wEACE;QAAA,uEAAyC;QAAA,uEAAY;QAAA,4DAAI;QAC3D,4DAAK;QACL,yEACE;QAAA,wEAAkC;QAAA,iEAAK;QAAA,4DAAI;QAC7C,4DAAK;QACL,yEACE;QAAA,wEAAuC;QAAA,kEAAM;QAAA,4DAAI;QACnD,4DAAK;QACL,yEACE;QAAA,yEAAsC;QAAA,qEAAS;QAAA,4DAAI;QACrD,4DAAK;QACP,4DAAK;QACP,4DAAM;QACR,4DAAM;QAEN,4EAA+B;;6FDlBlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACqD;AAChC;AAClB;AACe;AACN;AACA;AACd;AACyC;AAC7B;AACD;AACF;AAC6B;AACe;AACV;;;AAwBjF,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,gFAAkB,EAAE,mEAAW,CAAC,YATnC;YACP,uEAAa;YACb,sEAAgB;YAChB,oEAAgB;YAChB,+DAAiB,CAAC,aAAa,CAAC,wEAAW,CAAC,cAAc,CAAC;YAC3D,8EAAsB;YACtB,2DAAW;YACX,wEAAqB;SACtB;mIAIU,SAAS,mBApBlB,2DAAY;QACZ,gHAA2B;QAC3B,mGAAuB;QACvB,sEAAc;QACd,gGAAsB;QACtB,+GAA2B;QAC3B,qGAAuB,aAGvB,uEAAa;QACb,sEAAgB;QAChB,oEAAgB,mEAEhB,8EAAsB;QACtB,2DAAW;QACX,wEAAqB;6FAKZ,SAAS;cAtBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,gHAA2B;oBAC3B,mGAAuB;oBACvB,sEAAc;oBACd,gGAAsB;oBACtB,+GAA2B;oBAC3B,qGAAuB;iBACxB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,sEAAgB;oBAChB,oEAAgB;oBAChB,+DAAiB,CAAC,aAAa,CAAC,wEAAW,CAAC,cAAc,CAAC;oBAC3D,8EAAsB;oBACtB,2DAAW;oBACX,wEAAqB;iBACtB;gBACD,SAAS,EAAE,CAAC,gFAAkB,EAAE,mEAAW,CAAC;gBAC5C,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;;;;;;;;;;;ACzC0C;AAKX;;;;;;AAczB,MAAM,WAAW;IAItB,YACU,MAAuB,EACvB,GAAqB,EACrB,MAAc,EACd,IAAgB;QAHhB,WAAM,GAAN,MAAM,CAAiB;QACvB,QAAG,GAAH,GAAG,CAAkB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAY;QAExB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;QAElC,qCAAqC;QACrC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,gDAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACnE,CAAC;IAED,YAAY;QACV,MAAM,QAAQ,GAAG,IAAI,gDAAQ,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;QACxD,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;IAC/C,CAAC;IAED,qEAAqE;IACrE,4CAA4C;IAC5C,uFAAuF;IAEvF,sDAAsD;IAEtD,kCAAkC;IAClC,2BAA2B;IAE3B,MAAM;IAEN,iDAAiD;IAEjD,0IAA0I;IAE1I,mBAAmB;IACnB,qBAAqB;IACrB,yBAAyB;IACzB,qCAAqC;IACrC,8BAA8B;IAC9B,MAAM;IAEN,8CAA8C;IAC9C,IAAI;IAEE,OAAO;;YACX,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC;KAAA;;sEAjDU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGN;AAErC,+DAA+D;AAC3B;;;AAEpC,wCAAwC;AAKjC,MAAM,kBAAkB;IAE7B,YAAoB,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;IAAI,CAAC;IAEpD,qCAAqC;IAErC,IAAI;IAEJ,cAAc,CAAC,MAAc,EAAE,IAAY,EAAE,IAAc;QAEzD,OAAO,CAAC,GAAG,CAAC,oDAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC;QAEzD,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,GAAG,CAC9C;YACE,QAAQ,EAAE,MAAM;YAChB,WAAW,EAAE,oDAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,eAAe,EAAE;YAC5D,aAAa,EAAE,IAAI;YACnB,MAAM,EAAE,IAAI;SACb,CACF;IACH,CAAC;IAED,aAAa,CAAC,kBAA0B;QACtC,MAAM,kBAAkB,GAAG,oDAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,OAAO,GAAG,kBAAkB,CAAC;QAC3F,MAAM,oBAAoB,GAAG,IAAI,oDAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;QAErF,OAAO,IAAI,CAAC,SAAS;aAClB,UAAU,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG;aACjC,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,oBAAoB,CAAC;aAC9C,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;aAC7B,eAAe,EAAE;aACjB,IAAI,CACH,0DAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;;YAClC,MAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;YAC/B,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YAExB,OAAO;gBACL,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC;gBACzB,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC;gBAElB,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC;gBAEtB,cAAc,EAAE,OAAC,IAAI,CAAC,WAAW,CAAC,mCAAI,oDAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE;gBAC5F,EAAE,EAAE,GAAG,CAAC,EAAE;aACI,CAAC;QACnB,CAAC,CAAC,CAAC,CACJ,CAAC;IACN,CAAC;;oFA/CU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;;;;;;;;ACXwD;AACD;AACtB;;;;AAGlC,MAAM,WAAW,GAAW,UAAU,CAAC;AACvC,MAAM,gBAAgB,GAAW,CAAC,CAAC;AAO5B,MAAM,sBAAsB;IA8BjC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QARpC,iBAAY,GAAW,IAAI,CAAC;QAS1B,+BAA+B;QAC/B,IAAI,CAAC,cAAc,GAAG,uDAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;IAC5D,CAAC;IAxBD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,IAAI,SAAS;QACX,MAAM,aAAa,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACjE,OAAO,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC9D,CAAC;IAED,IAAI,OAAO;QACT,OAAO,sDAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAClD,CAAC;IAeD,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,MAAM,iBAAiB,CAAC;IAC1B,CAAC;IAED,+BAA+B;IAC/B,cAAc,KAAU,CAAC;IAEjB,eAAe;QACrB,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,IAAI,CAAC,EAAE;YACxC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,OAAO;SACR;QAED,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC9D,CAAC;IAEa,eAAe,CAAC,SAAS,EAAE,SAAS;;YAChD,IAAI,IAAiB,CAAC;YACtB,IAAI,KAAa,CAAC;YAElB,IAAI;gBACF,IAAI,GAAG,MAAM,sDAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;gBAC7D,KAAK,GAAG,IAAI,CAAC;aACd;YAAC,OAAO,EAAE,EAAE;gBACX,IAAI,GAAG,IAAI,CAAC;gBACZ,KAAK,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;aACvB;YAED,IAAI,IAAI,CAAC,cAAc,GAAG,SAAS,GAAG,CAAC,EAAE;gBACvC,OAAO;aACR;YAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;KAAA;IAED,YAAY;QACV,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;IAChC,CAAC;IAED,YAAY;IAEZ,CAAC;;4FAlFU,sBAAsB;sGAAtB,sBAAsB;QCdnC,yEACE;QAAA,yEACE;QAAA,wEAAsB;QAAA,kFAAuB;QAAA,4DAAK;QAClD,uEAAgB;QAAA,oGAAyC;QAAA,4DAAI;QAC/D,4DAAM;QACR,4DAAM;QAEN,yEACE;QAAA,yEACE;QAAA,2EAGF;QAFwC,uMAAiC,qFAC5D,oBAAgB,IAD4C;QADvE,4DAGF;QAAA,4DAAM;QAEN,yEACE;QAAA,qEAEA;QAAA,0EACE;QAAA,wEAAoC;QAAA,0EAAuB;QAAA,wDAA2B;QAAA,4DAAK;QAAA,4DAAI;QAC/F,yEAAqB;QAAA,mHAAuD;QAAA,4DAAI;QAClF,4DAAM;QAEN,2EACE;QAAA,2EACE;QAAA,8EAAsE;QAAzB,+IAAS,kBAAc,IAAC;QAAC,+DAAG;QAAA,4DAAS;QAClF,8EAAqE;QAAzB,+IAAS,kBAAc,IAAC;QAAC,8DAAE;QAAA,4DAAS;QAClF,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,qEAAG;QAAA,wDAAkB;QAAA,4DAAI;QAC3B,4DAAM;QACR,4DAAM;;QAxBoC,0DAAiC;QAAjC,4FAAiC;QAIpE,0DAAoB;QAApB,iFAAoB;QAClB,0DAA4B;QAA5B,mLAA4B;QAG5B,0DAAgB;QAAhB,0IAAgB;QAAwC,0DAA2B;QAA3B,uHAA2B;QAYrF,0DAAwB;QAAxB,qFAAwB;QAExB,0DAAkB;QAAlB,iFAAkB;;6FDlBZ,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;+GAIC,mBAAmB;kBADlB,mDAAK;;;;;;;;;;;;;;;;;;AEdR,MAAM,QAAQ,GAAW,uCAAuC,CAAC;AAE1D,MAAM,QAAQ;IAEnB,MAAM,CAAC,qBAAqB,CAAC,GAAW;QACtC,OAAO,GAAG,QAAQ,SAAS,GAAG,EAAE,CAAC;IACnC,CAAC;IAED,MAAM,CAAC,eAAe,CAAC,MAAM;QAC3B,OAAO,sCAAsC,MAAM,EAAE,CAAC;IACxD,CAAC;IAED,MAAM,CAAO,gBAAgB,CAAC,IAAgB,EAAE,MAAM;;YACpD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,GAAG,CAC5B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,EACxD,EAAE,YAAY,EAAE,MAAM,EAAE,CACzB,CAAC,SAAS,EAAE,CAAC;YAEd,MAAM,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC;YAC/B,MAAM,GAAG,GAAG,MAAM,CAAC,eAAe,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;YAEzD,MAAM,kBAAkB,GAAG,GAAG,CAAC,aAAa,CAAC,kCAAkC,CAAC,CAAC;YACjF,MAAM,cAAc,GAAG,GAAG,CAAC,aAAa,CAAC,gCAAgC,CAAC,CAAC;YAE3E,IAAI,CAAC,kBAAkB,IAAI,CAAC,cAAc,EAAE;gBAC1C,MAAM,oBAAoB,MAAM,YAAY,CAAC;aAC9C;YAED,MAAM,WAAW,GAAG,kBAAkB,CAAC,WAAW,CAAC;YACnD,MAAM,UAAU,GAAG,cAAc,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAEtD,OAAO;gBACL,WAAW,EAAE,WAAW;gBACxB,UAAU,EAAE,EAAE;gBACd,UAAU,EAAE,UAAU;aACvB;QACH,CAAC;KAAA;CAEF;;;;;;;;;;;;;ACxCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAE4B;AACK;AAC/B;AACyC;;;AAElG,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,8GAA2B,EAAE;IAChE,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,+FAAsB,EAAE;IACzD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,oGAAuB,EAAE;CAC1D,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAkD;;;AAQ3C,MAAM,cAAc;IAEzB,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAE1C,QAAQ;IACR,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;IAC3B,CAAC;;4EATU,cAAc;8FAAd,cAAc;QCR3B,yEACE;QAAA,yEACE;QAAA,wEAAsB;QAAA,gEAAK;QAAA,4DAAK;QAChC,uEAAgB;QAAA,uHAA4D;QAAA,4DAAI;QAChF,mEACA;QAAA,4EAAwE;QAA3B,sIAAS,oBAAgB,IAAC;QAAC,gEAAK;QAAA,4DAAS;QACxF,4DAAM;QACR,4DAAM;;6FDCO,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;AAGzD,iDAAiD;AACjD,MAAM,SAAS,GAAG,SAAS,CAAC;AAOrB,MAAM,uBAAuB;IAKlC,YAAoB,eAAmC;QAAnC,oBAAe,GAAf,eAAe,CAAoB;QAH9C,SAAI,GAAW,EAAE,CAAC;QAClB,aAAQ,GAAW,EAAE,CAAC;IAE4B,CAAC;IAE5D,QAAQ;IACR,CAAC;IAED,QAAQ;QACN,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAElB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAEnB,OAAO,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC9D,CAAC;;8FApBU,uBAAuB;uGAAvB,uBAAuB;QCXpC,0EACE;QADI,+IAAU,cAAU,IAAC;QACzB,yEACE;QAAA,yEACE;QAAA,2EACA;QADkF,yLAAkB;QAApG,4DACA;QAAA,2EAEA;QAFyG,6LAAsB;QAA/H,4DAEA;QAAA,yEACE;QAAA,4EAA2D;QAAA,kEAAO;QAAA,4DAAS;QAC7E,4DAAM;QAER,4DAAM;QACR,4DAAM;QACR,4DAAO;;QATiF,0DAAkB;QAAlB,6EAAkB;QACK,0DAAsB;QAAtB,iFAAsB;;6FDOxH,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;gIAGU,IAAI;kBAAZ,mDAAK;YACG,QAAQ;kBAAhB,mDAAK;;;;;;;;;;;;;;AEdR;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-reservations-window',\n  templateUrl: './reservations-window.component.html',\n  styleUrls: ['./reservations-window.component.css']\n})\nexport class ReservationsWindowComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron\">\n  <div class=\"container\">\n    <h1 class=\"display-4\">Article Reservation List</h1>\n    <p class=\"lead\">You may check if an article has been reserved, or reserve a new article</p>\n  </div>\n</div>\n\n<div class=\"container\">\n  <app-add-reservation></app-add-reservation>\n  <app-reservation-list></app-reservation-list>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyBDQp5SnwZklEufN1iwoGBW4-w2EL6Aipg\",\n    authDomain: \"fxp-reserves.firebaseapp.com\",\n    databaseURL: \"https://fxp-reserves.firebaseio.com\",\n    projectId: \"fxp-reserves\",\n    storageBucket: \"fxp-reserves.appspot.com\",\n    messagingSenderId: \"86920300248\",\n    appId: \"1:86920300248:web:2351b47df29fff8cc679ad\"\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logged-in-screen',\n  templateUrl: './logged-in-screen.component.html',\n  styleUrls: ['./logged-in-screen.component.css']\n})\nexport class LoggedInScreenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron\">\n  <div class=\"container\">\n    <h1 class=\"display-4\">Choose your app</h1>\n    <p class=\"lead\">Choose here which action your want to take</p>\n  </div>\n</div>\n\n<div class=\"container\">\n  <button class=\"btn btn-primary\">Join A Department</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Observable, Subscription, interval } from 'rxjs';\nimport { Reservation } from '../models/reservation';\nimport { ReservationService } from '../services/reservation.service';\nimport firebase from 'firebase/app';\n\n@Component({\n  selector: 'app-reservation-list',\n  templateUrl: './app-reservation-list.component.html',\n  styleUrls: ['./app-reservation-list.component.css']\n})\nexport class AppReservationListComponent implements OnInit {\n\n  constructor(private reservService: ReservationService) { }\n\n  private reservesSubscription: Subscription;\n  private timerSubscription: Subscription;\n\n  reserves: Reservation[];\n  secondsPassed: number[];\n\n  ngOnInit(): void {\n    const observedReserves = this.reservService.fetchReserves(60 * 60 * 4);\n    this.reservesSubscription = observedReserves.subscribe((reservations) => this.reserves = reservations);\n\n    this.timerSubscription = interval(1000).subscribe((x) => this._timerUpdater(x));\n  }\n\n  ngOnDestroy(): void {\n    this.timerSubscription.unsubscribe();\n    this.reservesSubscription.unsubscribe();\n  }\n\n  _timerUpdater(x: number): void {\n    const newDiffs: number[] = [];\n    const now = firebase.firestore.Timestamp.now().toMillis();\n\n    if (!this.reserves) {\n      this.secondsPassed = newDiffs;\n      return;\n    }\n\n    for (let reserve of this.reserves) {\n      newDiffs.push((now - reserve.startTimestamp) / 1000);\n    }\n\n    this.secondsPassed = newDiffs;\n  }\n\n\n  isFinished(timeSeconds: number): boolean {\n    return timeSeconds > 20;\n  }\n\n  isAlmostFinished(timeSeconds: number): boolean {\n    return timeSeconds > 15;\n  }\n\n  timeRemaining(timeSecondsPassed: number): number {\n    const time = 60 * 60 * 0.5 - timeSecondsPassed;\n    return time > 0 ? time : 0;\n  }\n}\n","<div class=\"list-group\">\r\n\r\n  <span class=\"list-group-item list-group-item-action\" *ngFor=\"let res of reserves; index as i;\"\r\n    [class]=\"{\r\n      'list-group-item-danger': isFinished(secondsPassed[i]),\r\n      'list-group-item-warning': !isFinished(secondsPassed[i]) && isAlmostFinished(secondsPassed[i])\r\n    }\">\r\n\r\n    <div class=\"d-flex w-100 justify-content-between\">\r\n      <h5 class=\"mb-1\">{{ res.desc }}</h5>\r\n      <small class=\"text-muted\">{{ timeRemaining(secondsPassed[i]) * 1000 | date:'H:mm:ss':'UTC'}} remaining</small>\r\n    </div>\r\n\r\n    <p class=\"mb-1\" *ngFor=\"let url of res.urls\">\r\n      <a [href]=\"url\">{{ url }}</a>\r\n    </p>\r\n\r\n    <small class=\"text-muted\">Reserved by: {{ res.userId }}</small>\r\n\r\n  </span>\r\n</div>","import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { AppUtils } from './models/utils';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'article-reservation';\n\n  constructor(public auth: AuthService, public http: HttpClient) {\n    AppUtils.retrieveUserData(http, '917499').then(console.log).catch(console.error);\n  }\n\n\n}\n","<!-- <app-login></app-login> -->\n\n<!-- <app-attach-account></app-attach-account> -->\n\n<nav class=\"navbar navbar-dark bg-success navbar-expand-md\">\n  <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/reservations\">Reservations</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/login\">Login</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/fxp-attach\">Attach</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/logged-in\">Logged-In</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AppReservationListComponent } from './app-reservation-list/app-reservation-list.component';\nimport { ReservationService } from './services/reservation.service';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from \"@angular/fire/firestore\";\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { environment } from 'src/environments/environment';\nimport { FormsModule } from '@angular/forms';\nimport { AddReservationComponent } from './add-reservation/add-reservation.component';\nimport { LoginComponent } from './login/login.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthService } from './services/auth.service';\nimport { AttachAccountComponent } from './attach-account/attach-account.component';\nimport { ReservationsWindowComponent } from './reservations-window/reservations-window.component';\nimport { LoggedInScreenComponent } from './logged-in-screen/logged-in-screen.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppReservationListComponent,\n    AddReservationComponent,\n    LoginComponent,\n    AttachAccountComponent,\n    ReservationsWindowComponent,\n    LoggedInScreenComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule,\n    FormsModule,\n    AngularFireAuthModule,\n  ],\n  providers: [ReservationService, AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\nimport { User } from '../models/user';\nimport { Router } from '@angular/router';\n\nimport firebase from 'firebase';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { AppUtils } from '../models/utils';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  user: Observable<firebase.User>;\n\n  constructor(\n    private afAuth: AngularFireAuth,\n    private afs: AngularFirestore,\n    private router: Router,\n    private http: HttpClient,\n  ) {\n    this.user = this.afAuth.authState;\n\n    // make sure the user stays logged in\n    this.afAuth.setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n  }\n\n  googleSignin(): Promise<firebase.auth.UserCredential> {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    return this.afAuth.signInWithPopup(provider);\n  }\n\n  // private async updateUserData(user: firebase.User): Promise<void> {\n  //   // Sets user data to firestore on login\n  //   const userRef: AngularFirestoreDocument<User> = this.afs.doc(`users/${user.uid}`);\n\n  //   const userData = await userRef.get().toPromise();\n\n  //   // if the user does not exist\n  //   if (userData.exists) {\n\n  //   }\n\n  //   await AppUtils.retrieveUserData(this.http, )\n\n  //   console.log(await this.http.get(`https://scotism-sum.000webhostapp.com/?url=https://fxp.co.il`, {responseType: 'text'}).toPromise());\n\n  //   const data = {\n  //     uid: user.uid,\n  //     email: user.email,\n  //     displayName: user.displayName,\n  //     photoURL: user.photoURL\n  //   }\n\n  //   return userRef.set(data, { merge: true })\n  // }\n\n  async signOut() {\n    await this.afAuth.signOut();\n    this.router.navigate(['/']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Reservation } from '../models/reservation';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AngularFirestore, DocumentReference } from '@angular/fire/firestore';\n// import * as firebase from '@angular/fire/database/database';\nimport firebase from 'firebase/app';\n\n// import * as firebase from 'firebase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReservationService {\n\n  constructor(private firestore: AngularFirestore) { }\n\n  // getReservations(): Reservation[] {\n\n  // }\n\n  addReservation(userId: number, desc: string, urls: string[]) : Promise<DocumentReference> {\n\n    console.log(firebase.firestore.Timestamp.now().toDate());\n\n    return this.firestore.collection(\"reserves\").add(\n      {\n        \"userId\": userId,\n        \"startTime\": firebase.firestore.FieldValue.serverTimestamp(),\n        \"description\": desc,\n        \"urls\": urls,\n      }\n    )\n  }\n\n  fetchReserves(maxSecondsBackward: number): Observable<Reservation[]> {\n    const maxBackwardSeconds = firebase.firestore.Timestamp.now().seconds - maxSecondsBackward;\n    const maxBackwardTimestamp = new firebase.firestore.Timestamp(maxBackwardSeconds, 0);\n\n    return this.firestore\n      .collection(\"reserves\", ref => ref\n      .where(\"startTime\", \">=\", maxBackwardTimestamp)\n      .orderBy(\"startTime\", 'desc'))\n      .snapshotChanges()\n      .pipe(\n        map(actions => actions.map(change => {\n          const doc = change.payload.doc;\n          const data = doc.data();\n\n          return {\n            desc: data[\"description\"],\n            urls: data[\"urls\"],\n\n            userId: data[\"userId\"],\n\n            startTimestamp: (data[\"startTime\"] ?? firebase.firestore.Timestamp.now()).toDate().getTime(),\n            id: doc.id,\n          } as Reservation;\n        }))\n      );\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { AppUtils, FXPUserData } from '../models/utils';\nimport { debounce } from 'lodash';\nimport { utils } from 'protractor';\n\nconst ID_CAPTURER: RegExp = /\\D?(\\d+)/;\nconst ID_CAPTURE_GROUP: number = 1;\n\n@Component({\n  selector: 'app-attach-account',\n  templateUrl: './attach-account.component.html',\n  styleUrls: ['./attach-account.component.css']\n})\nexport class AttachAccountComponent implements OnInit {\n\n  @Input()\n  userIdentifierInput: string;\n\n  /**\n   * Contains the currently selected FXP user\n   */\n  private _userData: FXPUserData;\n  get userData(): FXPUserData {\n    return this._userData;\n  }\n\n  get accountId(): string {\n    const captureGroups = ID_CAPTURER.exec(this.userIdentifierInput);\n    return captureGroups ? captureGroups[ID_CAPTURE_GROUP] : \"\";\n  }\n\n  get userURL(): string {\n    return AppUtils.createMemberURL(this.accountId);\n  }\n\n  errorMessage: string = null;\n\n  /**\n   * The id of the latest request made, only the latest request may edit `userData`\n   * (this is used for elimination of race conditions since _userData and errorMessage are being changed asynchrounously)\n   */\n  private _nextRequestId: number;\n\n  constructor(private http: HttpClient) {\n    // don't make too many requests\n    this.changedAccount = debounce(this._changedAccount, 500);\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    throw \"Not implemented\";\n  }\n\n  // placeholder for the debounce\n  changedAccount(): void {}\n\n  private _changedAccount(): void {\n    if (this.userIdentifierInput.length == 0) {\n      this._userData = null;\n      this.errorMessage = null;\n      return;\n    }\n\n    this.retrieveAccount(this._nextRequestId++, this.accountId);\n  }\n\n  private async retrieveAccount(requestId, accountId): Promise<any> {\n    var data: FXPUserData;\n    var error: string;\n\n    try {\n      data = await AppUtils.retrieveUserData(this.http, accountId);\n      error = null;\n    } catch (ex) {\n      data = null;\n      error = ex.toString();\n    }\n\n    if (this._nextRequestId > requestId + 1) {\n      return;\n    }\n\n    this._userData = data;\n    this.errorMessage = error;\n  }\n\n  onNotAccount(): void {\n    this._userData = null;\n    this.userIdentifierInput = \"\";\n  }\n\n  onYesAccount(): void {\n\n  }\n}\n","<div class=\"jumbotron\">\n  <div class=\"container\">\n    <h1 class=\"display-4\">Attach your FXP account</h1>\n    <p class=\"lead\">Paste the link to your profile down below</p>\n  </div>\n</div>\n\n<div class=\"container\">\n  <div class=\"form-group\">\n    <input class=\"form-control\" type=\"text\" name=\"account-link\"\n      placeholder=\"Profile URL / User Id\" [(ngModel)]=\"userIdentifierInput\"\n      (input)=\"changedAccount()\" />\n  </div>\n\n  <div [hidden]=\"!userData\" class=\"card\">\n    <img [src]=\"userData?.pictureURL\" class=\"profile-image card-img-top\" />\n\n    <div class=\"card-body\">\n      <a [href]=\"userURL\" target=\"_blank\"><h5 class=\"card-title\">{{ userData?.displayName }}</h5></a>\n      <p class=\"card-text\">Is this your profile? If not, change the URL / Id above</p>\n    </div>\n\n    <div class=\"card-footer\">\n      <div class=\"row justify-content-around\">\n        <button class=\"btn btn-success btn-lg col-5\" (click)=\"onYesAccount()\">Yes</button>\n        <button class=\"btn btn-danger btn-lg col-5\" (click)=\"onNotAccount()\">No</button>\n      </div>\n    </div>\n  </div>\n\n  <div [hidden]=\"!errorMessage\" >\n    <h6>Error:</h6>\n    <p>{{ errorMessage }}</p>\n  </div>\n</div>","import { HttpClient } from '@angular/common/http';\r\n\r\nconst proxyURL: string = \"https://scotism-sum.000webhostapp.com\";\r\n\r\nexport class AppUtils {\r\n\r\n  static createProxyRequestURL(url: string): string {\r\n    return `${proxyURL}/?url=${url}`;\r\n  }\r\n\r\n  static createMemberURL(userId): string {\r\n    return `https://www.fxp.co.il/member.php?u=${userId}`;\r\n  }\r\n\r\n  static async retrieveUserData(http: HttpClient, userId): Promise<FXPUserData> {\r\n    const request = await http.get(\r\n      this.createProxyRequestURL(this.createMemberURL(userId)),\r\n      { responseType: 'text' },\r\n    ).toPromise();\r\n\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(request, 'text/html');\r\n\r\n    const displayNameElement = doc.querySelector(\"#userinfo > span.member_username\");\r\n    const pictureElement = doc.querySelector(\"#userinfoblock > a > div > img\");\r\n\r\n    if (!displayNameElement || !pictureElement) {\r\n      throw `No user with id: ${userId} was found`;\r\n    }\r\n\r\n    const displayName = displayNameElement.textContent;\r\n    const pictureURL = pictureElement.getAttribute(\"src\");\r\n\r\n    return {\r\n      displayName: displayName,\r\n      nameStyles: '',\r\n      pictureURL: pictureURL,\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport interface FXPUserData {\r\n  displayName: string;\r\n  nameStyles: string;\r\n\r\n  pictureURL: string;\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppReservationListComponent } from './app-reservation-list/app-reservation-list.component';\nimport { AttachAccountComponent } from './attach-account/attach-account.component';\nimport { LoggedInScreenComponent } from './logged-in-screen/logged-in-screen.component';\nimport { LoginComponent } from './login/login.component';\nimport { ReservationsWindowComponent } from './reservations-window/reservations-window.component';\n\nconst routes: Routes = [\n  { path: \"reservations\", component: ReservationsWindowComponent },\n  { path: \"login\", component: LoginComponent },\n  { path: \"fxp-attach\", component: AttachAccountComponent },\n  { path: \"logged-in\", component: LoggedInScreenComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  onPressedLogin(): void {\n    this.auth.googleSignin();\n  }\n\n}\n","<div class=\"jumbotron\">\n  <div class=\"container\">\n    <h1 class=\"display-4\">Login</h1>\n    <p class=\"lead\">Log in using your Google account in order to access this app</p>\n    <br class=\"mb-4\" />\n    <button class=\"btn btn-primary btn-lg col-2\" (click)=\"onPressedLogin()\">Login</button>\n  </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { ReservationService } from '../services/reservation.service';\n\n// matches whitespaces surrounding a single comma\nconst separator = /\\s*,\\s*/;\n\n@Component({\n  selector: 'app-add-reservation',\n  templateUrl: './add-reservation.component.html',\n  styleUrls: ['./add-reservation.component.css']\n})\nexport class AddReservationComponent implements OnInit {\n\n  @Input() desc: string = \"\";\n  @Input() urlInput: string = \"\";\n\n  constructor(private reservesService: ReservationService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): Promise<any> {\n    const desc = this.desc;\n    const urls = this.urlInput.split(separator);\n    console.log(this.urlInput);\n    console.log(urls);\n\n    this.desc = \"\";\n    this.urlInput = \"\";\n\n    return this.reservesService.addReservation(123, desc, urls);\n  }\n}\n","<form (submit)=\"onSubmit()\">\n  <div class=\"row\">\n    <div class=\"form-group input-group mr-auto ml-auto col-11\">\n      <input type=\"text\" class=\"form-control\" placeholder=\"Article Title / Description\" [(ngModel)]=\"desc\" name=\"description\">\n      <input type=\"text\" class=\"form-control\" placeholder=\"Article Link(s) [May be separated with commas (,)]\" [(ngModel)]=\"urlInput\" name=\"urls\">\n\n      <div class=\"input-group-append\">\n        <button class=\"btn btn-primary form-control\" type=\"submit\">Reserve</button>\n      </div>\n\n    </div>\n  </div>\n</form>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}